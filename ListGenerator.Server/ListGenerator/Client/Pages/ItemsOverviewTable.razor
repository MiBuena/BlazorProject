@page "/allitemstable"

@using ListGenerator.Client.ViewModels;
@using ListGenerator.Shared.Extensions

@{
    var columnSize = "160px";
}


@if (this.Items == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <input type="text" class="search-box" placeholder="Search..." @bind-value="SearchWord" @bind-value:event="oninput" @onkeyup="Change" />

    <button @onclick="@NavigateToListGeneration" class="btn btn-outline-primary shopping-list-button">Generate shopping list</button>

    <RadzenGrid FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="5"
                AllowSorting="true" Data="@Items" TItem="ItemOverviewViewModel">
        <Columns>
            @*<RadzenGridColumn TItem="Employee" Property="Photo" Title="Photo" Sortable="false" Filterable="false">
                    <Template Context="data">
                        <RadzenImage Path="@data?.Photo" />
                    </Template>
                </RadzenGridColumn>*@
            <RadzenGridColumn TItem="ItemOverviewViewModel" Property="Name" Width="@columnSize">
                <HeaderTemplate>
                    <span class="gridColumn">Name</span>
                </HeaderTemplate>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="ItemOverviewViewModel" Property="ReplenishmentPeriodNumber" Width="@columnSize" TextAlign="TextAlign.Center">
                <HeaderTemplate>
                    <span class="gridColumn">1 piece is consumed for (days)</span>
                </HeaderTemplate>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="ItemOverviewViewModel" Property="LastReplenishmentQuantity" Width="@columnSize" TextAlign="TextAlign.Center">
                <HeaderTemplate>
                    <span class="gridColumn">Last purchase quantity</span>
                </HeaderTemplate>
                <Template Context="data">
                    @if (data.LastReplenishmentQuantity == null)
                    {
                        @:-
                    }
                    else
                    {
                        @data.LastReplenishmentQuantity
                    }
                </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="ItemOverviewViewModel" Property="LastReplenishmentDate" Width="@columnSize" TextAlign="TextAlign.Center">
                <HeaderTemplate>
                    <span class="gridColumn">Last purchase date</span>
                </HeaderTemplate>
                <Template Context="data">
                    @if (data.LastReplenishmentDate == null)
                    {
                        @:-
                    }
                    else
                    {
                        @data.LastReplenishmentDate.Value.ToDateString()
                    }
                </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="ItemOverviewViewModel" Property="NextReplenishmentDate" Width="@columnSize" TextAlign="TextAlign.Center">
                <HeaderTemplate>
                    <span class="gridColumn">Next replenishment date</span>
                </HeaderTemplate>
                <Template Context="data">
                    @data.NextReplenishmentDate.ToDateString()
                </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="ItemOverviewViewModel" Sortable="false">
                <Template Context="item">
                    <RadzenButton Size="ButtonSize.Small" Click="@(x => QuickEditItem(item.Id))">
                        Edit
                    </RadzenButton>
                    <RadzenButton Size="ButtonSize.Small" Click="@(x => DeleteItemQuestion(item.Id))">
                        Delete
                    </RadzenButton>
                </Template>
            </RadzenGridColumn>
        </Columns>
    </RadzenGrid>


    <br />

    <RadzenButton Text="Quick add" Size="ButtonSize.Medium" Click="@QuickAddItem" ButtonStyle="ButtonStyle.Secondary">
    </RadzenButton>

    <AddItemDialog @ref="AddItemDialog" CloseEventCallback="@AddItemDialog_OnDialogClose"></AddItemDialog>

    <EditItemDialog @ref="EditItemDialog" CloseEventCallback="@EditItemDialog_OnDialogClose"></EditItemDialog>

    <DeleteItemDialog @ref="DeleteItemDialog" CloseEventCallback="@DeleteItemDialog_OnDialogClose"></DeleteItemDialog>
}